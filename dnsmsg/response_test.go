package dnsmsg

import (
	"fmt"
	"reflect"
	"testing"
)

func TestGetNsListFromDnsResponseNoNsServers(t *testing.T) {
	message := []byte{}
	_, err := getNsListFromDnsResponse(message)
	if err == nil {
		t.Fail()
	}
}

func TestGetNsListFromDnsResponseJpServers(t *testing.T) {
	expect := []string{"ns2.bitforest.jp.", "ns1.bitforest.jp."}

	// dns response message byte
	message := []byte{
		0b11011100, 0b10011010, 0b10000000, 0b00000000, 0b00000000, 0b00000001, 0b00000000, 0b00000000,
		0b00000000, 0b00000010, 0b00000000, 0b00000010, 0b00001001, 0b01100010, 0b01101001, 0b01110100,
		0b01100110, 0b01101111, 0b01110010, 0b01100101, 0b01110011, 0b01110100, 0b00000010, 0b01101010,
		0b01110000, 0b00000000, 0b00000000, 0b00000010, 0b00000000, 0b00000001, 0b11000000, 0b00001100,
		0b00000000, 0b00000010, 0b00000000, 0b00000001, 0b00000000, 0b00000001, 0b01010001, 0b10000000,
		0b00000000, 0b00000110, 0b00000011, 0b01101110, 0b01110011, 0b00110010, 0b11000000, 0b00001100,
		0b11000000, 0b00001100, 0b00000000, 0b00000010, 0b00000000, 0b00000001, 0b00000000, 0b00000001,
		0b01010001, 0b10000000, 0b00000000, 0b00000110, 0b00000011, 0b01101110, 0b01110011, 0b00110001,
		0b11000000, 0b00001100, 0b11000000, 0b00111100, 0b00000000, 0b00000001, 0b00000000, 0b00000001,
		0b00000000, 0b00000001, 0b01010001, 0b10000000, 0b00000000, 0b00000100, 0b00110110, 0b11111000,
		0b11011101, 0b00001101, 0b11000000, 0b00101010, 0b00000000, 0b00000001, 0b00000000, 0b00000001,
		0b00000000, 0b00000001, 0b01010001, 0b10000000, 0b00000000, 0b00000100, 0b00110110, 0b10110010,
		0b11000101, 0b11100100}

	servers, err := getNsListFromDnsResponse(message)
	if err != nil {
		t.Fail()
	}

	if !reflect.DeepEqual(expect, servers) {
		fmt.Println(expect)
		fmt.Println(servers)
		t.Fail()
	}
}

func TestGetNsListFromDnsResponseJpServersFailCheck(t *testing.T) {
	expect := []string{"ns1.notexistdomain.jp.", "ns2.notexistsdomain.jp."}

	// dns response message byte
	message := []byte{
		0b11011100, 0b10011010, 0b10000000, 0b00000000, 0b00000000, 0b00000001, 0b00000000, 0b00000000,
		0b00000000, 0b00000010, 0b00000000, 0b00000010, 0b00001001, 0b01100010, 0b01101001, 0b01110100,
		0b01100110, 0b01101111, 0b01110010, 0b01100101, 0b01110011, 0b01110100, 0b00000010, 0b01101010,
		0b01110000, 0b00000000, 0b00000000, 0b00000010, 0b00000000, 0b00000001, 0b11000000, 0b00001100,
		0b00000000, 0b00000010, 0b00000000, 0b00000001, 0b00000000, 0b00000001, 0b01010001, 0b10000000,
		0b00000000, 0b00000110, 0b00000011, 0b01101110, 0b01110011, 0b00110010, 0b11000000, 0b00001100,
		0b11000000, 0b00001100, 0b00000000, 0b00000010, 0b00000000, 0b00000001, 0b00000000, 0b00000001,
		0b01010001, 0b10000000, 0b00000000, 0b00000110, 0b00000011, 0b01101110, 0b01110011, 0b00110001,
		0b11000000, 0b00001100, 0b11000000, 0b00111100, 0b00000000, 0b00000001, 0b00000000, 0b00000001,
		0b00000000, 0b00000001, 0b01010001, 0b10000000, 0b00000000, 0b00000100, 0b00110110, 0b11111000,
		0b11011101, 0b00001101, 0b11000000, 0b00101010, 0b00000000, 0b00000001, 0b00000000, 0b00000001,
		0b00000000, 0b00000001, 0b01010001, 0b10000000, 0b00000000, 0b00000100, 0b00110110, 0b10110010,
		0b11000101, 0b11100100}

	servers, err := getNsListFromDnsResponse(message)
	if err != nil {
		t.Fail()
	}

	if reflect.DeepEqual(expect, servers) {
		fmt.Println(expect)
		fmt.Println(servers)
		t.Fail()
	}
}
